UserPool:
  Type: "AWS::Cognito::UserPool"
  Properties:
    UserPoolName: testUserPool
    MfaConfiguration: "OFF"
    Schema:
      - Name: email
        AttributeDataType: String
        Mutable: false
        Required: true

# Crea un User Pool Client para ser usado por la Identity Pool
UserPoolClient:
  Type: "AWS::Cognito::UserPoolClient"
  Properties:
    ClientName: testUserPoolClient
    GenerateSecret: false
    UserPoolId: !Ref UserPool


# Crea una Identity pool
IdentityPool:
  Type: "AWS::Cognito::IdentityPool"
  Properties:
    IdentityPoolName: testIdentityPool
    AllowUnauthenticatedIdentities: true
    CognitoIdentityProviders: 
      - ClientId: !Ref UserPoolClient
        ProviderName: !GetAtt UserPool.ProviderName


# Crea un role para acceso unauthorized a los recursos de AWS
CognitoUnAuthorizedRole:
  Type: "AWS::IAM::Role"
  Properties:
    AssumeRolePolicyDocument: 
      Version: "2012-10-17"
      Statement:
        - Effect: "Allow"
          Principal: 
            Federated: "cognito-identity.amazonaws.com"
          Action: 
            - "sts:AssumeRoleWithWebIdentity"
          Condition:
            StringEquals: 
              "cognito-identity.amazonaws.com:aud": !Ref IdentityPool
            "ForAnyValue:StringLike":
              "cognito-identity.amazonaws.com:amr": unauthenticated
    Policies:
      - PolicyName: "CognitoUnauthorizedPolicy"
        PolicyDocument: 
          Version: "2012-10-17"
          Statement: 
            - Effect: "Allow"
              Action:
                - "cognito-sync:*"
              Resource: !Join [ "", [ "arn:aws:cognito-sync:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":identitypool/", !Ref IdentityPool] ]
            - Effect: Allow
              Action:
                - iot:Connect
              Resource: !Join [ "", [ "arn:aws:iot:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":client/app-*" ] ]
            - Effect: Allow
              Action:
                - iot:Subscribe
              Resource: !Join [ "", [ "arn:aws:iot:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":topicfilter/*/new" ] ]
            - Effect: Allow
              Action:
                - iot:Receive
              Resource: !Join [ "", [ "arn:aws:iot:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":topic/*/new" ] ]


# Asigna el role reci√©n creado al Identity Pool
IdentityPoolRoleMapping:
  Type: "AWS::Cognito::IdentityPoolRoleAttachment"
  Properties:
    IdentityPoolId: !Ref IdentityPool
    Roles:
      unauthenticated: !GetAtt CognitoUnAuthorizedRole.Arn